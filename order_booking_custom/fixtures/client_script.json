[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quality Inspection",
  "enabled": 1,
  "modified": "2024-08-28 18:05:50.049280",
  "module": null,
  "name": "Quality Inspection",
  "script": "frappe.listview_settings['Quality Inspection'] = {\r\n    add_fields: ['status'],\r\n    get_indicator: function(doc) {\r\n        if (doc.status === \"Accepted\") {\r\n            return [__(\"Accepted\"), \"green\", \"status,=,Accepted\"];\r\n        } else if (doc.status === \"Rejected\") {\r\n            return [__(\"Rejected\"), \"red\", \"status,=,Rejected\"];\r\n        }\r\n    }\r\n};",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Order Booking Form",
  "enabled": 1,
  "modified": "2024-10-22 01:20:36.227170",
  "module": "Order Booking Custom",
  "name": "Order Booking Form",
  "script": "frappe.ui.form.on('Order Booking Form', {\r\n\trefresh(frm) {\r\n        frm.add_custom_button(__(\"Create\"), function(){\r\n        //perform desired action such as routing to new form or fetching etc.\r\n            if (frm.doc.customer_name){\r\n                frappe.call({\r\n                    method: \"serial_no_custom.utils.create_sales_order\", //dotted path to server method\r\n                    args:{\"name\":frm.doc.name},\r\n                    freeze: true,\r\n                    freeze_message: \"Creating Stock Entry, Sales Order, Work Order\",\r\n                    callback: function(r) {\r\n                        // code snippet\r\n                    }\r\n                });\r\n                \r\n            }\r\n            \r\n            if (frm.doc.custom_supplier){\r\n                frappe.call({\r\n                    method: \"order_booking_custom.utils.create_purchase_order\", //dotted path to server method\r\n                    args:{\"name\":frm.doc.name},\r\n                    freeze: true,\r\n                    freeze_message: \"Creating Purchase Receipt,Stock Entry, Work Order\",\r\n                    callback: function(r) {\r\n                        // code snippet\r\n                    }\r\n                });\r\n                \r\n            }\r\n    \r\n            // },__(\"Create\"));\r\n            // frm.add_custom_button(__(\"Purchase\"), function(){\r\n            //perform desired action such as routing to new form or fetching etc.\r\n            \r\n\r\n        });\r\n        \r\n        \r\n\t}\r\n});\r\n\r\n\r\n// frappe.ui.form.on('Order Booking Details', {\r\n//     bom: function(frm, cdt, cdn) {\r\n//         var child = locals[cdt][cdn];\r\n//         console.log(\"Hello\")\r\n        \r\n//         frm.fields_dict['bom'].get_query = function(doc) {\r\n//             return {\r\n//                 filters: [\r\n//                     ['Bom', 'item', '=', child.item_code]\r\n//                 ]\r\n//             };\r\n//         };\r\n//     }\r\n// });\r\n\r\n\r\nfrappe.ui.form.on('Order Booking Details', {\r\n\trefresh(frm) {\r\n\t    console.loog(\"Hello\")\r\n\t\t// your code here\r\n\t}\r\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quality Inspection",
  "enabled": 1,
  "modified": "2024-09-03 01:58:47.056524",
  "module": null,
  "name": "QA",
  "script": "frappe.ui.form.on('Quality Inspection', {\n\titem_code(frm) {\n\t    if(frm.doc.item_code){\n\t       // alert(\"Hello\")\n\t       // This function will be executed after a delay of 2000 milliseconds (2 seconds)\nsetTimeout(function() {\n    // Code to be executed after the timeout\n    frappe.call({\n                method: \"serial_no_custom.utils.get_serial_no\", //dotted path to server method\n                args:{\"reference_type\":frm.doc.reference_type,\"reference_name\":frm.doc.reference_name,\"item_code\":frm.doc.item_code},\n                callback: function(r) {\n                    // code snippet\n                    // console.log(r)\n                    cur_frm.set_value(\"item_serial_no\",r.message)\n                }\n        });\n    \n}, 2000);\n\n\t        \n\t    }\n\t    \n\t\t// your code here\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 1,
  "modified": "2024-09-08 00:27:17.202998",
  "module": null,
  "name": "Stock Entry",
  "script": "// frappe.ui.form.on('Stock Entry', {\r\n//     refresh: function(frm) {\r\n//         if (frm.doc.work_order){\r\n//             frm.add_fetch('work_order', 'custom_order_booking', 'custom_order_booking');\r\n//         }\r\n//         // Define which fields you want to fetch\r\n//     }\r\n// });\r\n\r\nfrappe.ui.form.on('Stock Entry', {\r\n    refresh: function(frm) {\r\n        frappe.db.get_value('Work Order', frm.doc.work_order, 'custom_order_booking', function(value) {\r\n            frm.set_value('custom_order_booking', value.custom_order_booking);\r\n        });\r\n    }\r\n});\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2024-10-22 01:15:09.026348",
  "module": null,
  "name": "Sales Order",
  "script": "frappe.ui.form.on('Sales Order', {\r\n    refresh: function(frm) {\r\n        // Only allow the button after the document is submitted\r\n        if (frm.doc.docstatus === 1) {\r\n            frm.add_custom_button(__('Update Work Order Status in Items'), function() {\r\n                frappe.confirm(\r\n                    'Are you sure you want to update the work order status for all items?',\r\n                    function() {\r\n                        // Call a custom method to get the Work Order status\r\n                        frappe.call({\r\n                            method: 'order_booking_custom.utils.get_work_order_status',  // Replace 'your_app' with your app's name and set the correct method\r\n                            args: {\r\n                                sales_order: frm.doc.name\r\n                            },\r\n                            callback: function(response) {\r\n                                if (response.message) {\r\n                                    // The response message will be a dictionary with item codes as keys and statuses as values\r\n                                    let work_order_status = response.message;\r\n\r\n                                    // Iterate over each item in the Sales Order child table\r\n                                    frm.doc.items.forEach(function(row) {\r\n                                        if (work_order_status[row.item_code]) {\r\n                                            // Update the status field in the child table with the retrieved work order status\r\n                                            frappe.model.set_value(row.doctype, row.name, 'custom_status', work_order_status[row.item_code]);\r\n                                        }\r\n                                    });\r\n\r\n                                    // Refresh the child table field to show updated statuses\r\n                                    frm.refresh_field('items');\r\n                                    frappe.msgprint(__('Work order statuses updated successfully.'));\r\n                                    frappe.call({\r\n                                        method: 'frappe.client.save',\r\n                                        args: {\r\n                                            doc: frm.doc\r\n                                        },\r\n                                        callback: function(save_response) {\r\n                                            if (save_response.message) {\r\n                                                // frappe.msgprint(__('Work order statuses updated and document saved successfully.'));\r\n                                                frm.reload_doc();  // Reload the document to reflect the updated data\r\n                                            } else {\r\n                                                frappe.msgprint(__('Failed to save the document.'));\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                } else {\r\n                                    frappe.msgprint(__('No work order statuses found.'));\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                );\r\n            });\r\n        }\r\n    }\r\n});\r\n",
  "view": "Form"
 }
]